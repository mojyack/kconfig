#!/usr/bin/env python
import os
import sys

included = set()
configs = dict()
sets = dict()


def strip_line(line):
    comment = line.find("#")
    if comment != -1:
        line = line[:comment]
    return line.strip()


def process_file(file):
    if file in included:
        return
    else:
        included.add(file)
    lines = open(file).readlines()
    i = 0
    while i < len(lines):
        try:
            line = strip_line(lines[i])
            if len(line) == 0:
                i += 1
                continue
            if line.startswith("include "):
                value = line.split(" ")[1]
                if value[0] == "/":
                    path = os.path.dirname(source) + value
                else:
                    path = os.path.dirname(file) + "/" + value
                process_file(path)
            elif line.startswith("erase "):
                value = line.split(" ")[1]
                configs.pop(value, None)
            elif line.startswith("set "):
                name, value = line.split(" ")[1:]
                sets[name] = value
            elif line.startswith("if "):
                name, op, value = line.split(" ")[1:]
                if op == "==":
                    cond = sets.get(name, "") != value
                else:
                    raise RuntimeError(f"unknown operator {op}")
                if cond:
                    i += 1
                    while strip_line(lines[i]) != "fi":
                        i += 1
                    i -= 1
            elif line == "fi":
                pass
            else:
                key, value = line.split("=", 1)
                configs[key] = value
            i += 1
        except Exception as e:
            print(e, file=sys.stderr)
            print(f'error occured while processing line "{line}"', file=sys.stderr)
            exit(1)


source = os.path.abspath(sys.argv[1])
process_file(source)
for key, value in configs.items():
    if value == "n":
        print(f"# {key} is not set")
    else:
        print(f"{key}={value}")
